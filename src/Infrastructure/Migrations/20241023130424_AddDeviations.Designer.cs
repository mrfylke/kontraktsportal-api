// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241023130424_AddDeviations")]
    partial class AddDeviations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Deviations.Deviation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeviationTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("LineId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uuid");

                    b.Property<string>("StopPlace")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DeviationTypeId");

                    b.ToTable("Deviations");
                });

            modelBuilder.Entity("Domain.Deviations.DeviationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Fee")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("DeviationCategories");
                });

            modelBuilder.Entity("Domain.Deviations.DeviationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviationCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DeviationCategoryId");

                    b.ToTable("DeviationTypes");
                });

            modelBuilder.Entity("Domain.Deviations.Deviation", b =>
                {
                    b.HasOne("Domain.Deviations.DeviationType", "DeviationType")
                        .WithMany("Deviations")
                        .HasForeignKey("DeviationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviationType");
                });

            modelBuilder.Entity("Domain.Deviations.DeviationType", b =>
                {
                    b.HasOne("Domain.Deviations.DeviationCategory", "DeviationCategory")
                        .WithMany("DeviationTypes")
                        .HasForeignKey("DeviationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviationCategory");
                });

            modelBuilder.Entity("Domain.Deviations.DeviationCategory", b =>
                {
                    b.Navigation("DeviationTypes");
                });

            modelBuilder.Entity("Domain.Deviations.DeviationType", b =>
                {
                    b.Navigation("Deviations");
                });
#pragma warning restore 612, 618
        }
    }
}
